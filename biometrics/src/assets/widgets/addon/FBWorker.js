const e=await import("https://sdk-web.facephi.pro/resources/scripts/FBTokenizer.js"),a=await fetch("https://sdk-web.facephi.pro/resources/scripts/FBTokenizer.wasm"),s=await import("https://sdk-web.facephi.pro/resources/scripts/FBlicensingLite.js"),t=await fetch("https://sdk-web.facephi.pro/resources/scripts/FBlicensingLite.wasm"),i=await a.arrayBuffer(),n=await t.arrayBuffer(),r=await s.default({wasmBinary:n,onRuntimeInitialized:()=>self.postMessage({message:"initialized",data:null})}),c=await e.default({wasmBinary:i,onRuntimeInitialized:()=>self.postMessage({message:"initialized",data:null})}),o=new c.Tokenizer;self.onmessage=function(e){switch(e.data.message){case"extraData":(e=>{const a=new c.MapStrStr;a.set("ExtraData",JSON.stringify(e)),o.addExtraData(a);let s=null;o.encryptDictionary(),s=o.getEncryptedDictionaryBase64(),self.postMessage({message:"encryptedData",data:s})})(e.data.data);break;case"validLicense":(e=>{try{const a=r.isValidLicense(e),s=r.LicenseStatus.values[a.value];self.postMessage({message:"isValidLicense",data:s.constructor.name})}catch(e){self.postMessage({message:"invalidLicense"})}})(JSON.stringify(e.data.data));break;case"getEnabledComponents":{let a={};e.data.componentsName.map((s=>{const t=((e,a)=>{const s=r.getEnabledComponents(e,a).getComponents();let t;for(let e=0;e<s.size();e++){const a=s.get(e);t={parameters:""!==a.license?JSON.parse(a.license):null}}return t})(JSON.stringify(e.data.license),s);t&&(a={...a,[s]:t})})),self.postMessage({message:"getEnabledComponents",data:a})}}};